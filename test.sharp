

fn printf(str format, ...) -> i32;
fn malloc(i64 size) -> node*;
fn free(node* ptr);

struct node {
    i32 value,
    node* next,
}

fn new_node(i32 value) -> node* {
    let node* ptr = malloc(sizeof(node));
    *ptr.value = value;
    return ptr;
}

fn push_front(node* head, i32 value) -> node* {
    let node* ptr = new_node(value);
    *ptr.next = head;
    return ptr;
}

fn node_test() {
    let node* head = new_node(1);

    let i32 a = 2;
    let i32 b = 3;

    head = push_front(head, a);
    head = push_front(head, b);

    printf("head: %d\n", *head.value);
    printf("head.next: %d\n", *(*head.next).value);
    printf("head.next.next: %d\n", *(*(*head.next).next).value);
    return;
}

fn main() -> i32 {
    let i32 i = 0;
    loop {
        if i == 10 {
            break;
        } else {
            i = i + 1;
        };
    };
    printf("i: %d\n", i);
    
    return 0;
}

