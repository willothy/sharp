use self::bingles::Test3;
//use self::bingles::printf;

fn malloc(i64 size) -> i8*;
fn free(i8* ptr);
fn printf(str format, ...) -> i32;


struct Test {
    i32 a,
    i32 b,
}

impl Test {
    fn new(i32 a, i32 b) -> Test {
        return Test {
            a,
            b,
        };
    }

    fn set_a(self, i32 a) {
        *self.a = a;
        return;
    }
}


struct Test2 {
    Test3 a,
    Test b,
}

impl Test2 {
    fn set_a(self, Test3 a) {
        *self.a.a = a;
        return;
    }
}

fn main() -> i32 {
    let Test2 t = Test2 {
        a: Test3 {
            a: 0,
            b: 0,
        },
        b: Test::new(9, 5),
    };
    printf("t.a.a: %d\n", t.a.a);
    printf("t.b.a: %d\n", t.b.a);
    t.set_a(Test3 {
        a: 10,
        b: 0,
    });

    t.b.set_a(25);
    
    
    printf("t.a.a: %d\n", t.a.a);
    printf("t.b.a: %d\n", t.b.a);
    return 0;
}

mod bingles {
    struct Test3 {
        i32 a,
        i32 b,
    }
    
}